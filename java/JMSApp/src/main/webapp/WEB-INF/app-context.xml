<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:jms="http://www.springframework.org/schema/jms"
    xmlns:amq="http://activemq.apache.org/schema/core"	
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/jms 
    http://www.springframework.org/schema/jms/spring-jms.xsd
    http://activemq.apache.org/schema/core 
    http://activemq.apache.org/schema/core/activemq-core.xsd	
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- Beans Declaration -->
	<!-- 
	<context:load-time-weaver />
	<aop:aspectj-autoproxy />
	 -->
	<context:spring-configured />
	<context:annotation-config />

	<context:component-scan base-package="com.e2.web.service" />
	<context:component-scan base-package="com.e2.web.jms" />
	
    <!--  Embedded ActiveMQ Broker -->
    <amq:broker id="broker" useJmx="true" persistent="true" brokerName="jboss-rta" dataDirectory="C:/development/server/apache-tomcat-6.0.37/data/rta" start="true">
		<amq:managementContext>
			<amq:managementContext useMBeanServer="true" createConnector="false" createMBeanServer="false" />
		</amq:managementContext>    
		<amq:networkConnectors>
			<amq:networkConnector name="rtaNetworkConnector"
				uri="multicast://239.25.111.202:6666?group=ingaRtaGroup"
				dynamicOnly="true" networkTTL="1" prefetchSize="1"
				decreaseNetworkConsumerPriority="true" />
		</amq:networkConnectors>		
		<amq:systemUsage>
			<amq:systemUsage>
				<amq:memoryUsage>
					<amq:memoryUsage limit="2gb" />
				</amq:memoryUsage>
				<amq:storeUsage>
					<amq:storeUsage limit="2gb" />
				</amq:storeUsage>
				<amq:tempUsage>
					<amq:tempUsage limit="2gb" />
				</amq:tempUsage>
			</amq:systemUsage>
		</amq:systemUsage>    
        <amq:transportConnectors>
            <amq:transportConnector name="rta_network" uri="tcp://localhost:10" discoveryUri="multicast://239.25.111.202:6666?group=ingaRtaGroup"/>
 		    <amq:transportConnector name="rta_remote_clients" uri="tcp://localhost:11" />
        </amq:transportConnectors>
    </amq:broker>

    <!--  ActiveMQ Destination  -->
    <amq:queue id="destination" physicalName="org.springbyexample.jms.test" />

    <!-- JMS ConnectionFactory to use, configuring the embedded broker using XML -->
    <amq:connectionFactory id="jmsFactory" brokerURL="vm://localhost" />

    <!-- JMS Producer Configuration -->
    <bean id="jmsProducerConnectionFactory1" 
          class="org.springframework.jms.connection.SingleConnectionFactory"
          depends-on="broker"
          p:targetConnectionFactory-ref="jmsFactory" />

	<bean id="jmsProducerConnectionFactory" 
		  class="org.apache.activemq.ActiveMQConnectionFactory" 
		  depends-on="broker" p:brokerURL="vm://jboss-rta"/>
    	
    <bean id="jmsProducerTemplate" class="org.springframework.jms.core.JmsTemplate"
          p:connectionFactory-ref="jmsProducerConnectionFactory"
          p:defaultDestination-ref="destination" />

    <!-- Counter for consumer to increment and test to verify count -->
    <bean id="counter" class="java.util.concurrent.atomic.AtomicInteger" />
	
	<!-- jms listener -->
    <bean id="jmsConsumerConnectionFactory" 
          class="org.springframework.jms.connection.SingleConnectionFactory"
          depends-on="broker"
          p:targetConnectionFactory-ref="jmsFactory" />
        
    <jms:listener-container container-type="default" 
                            connection-factory="jmsConsumerConnectionFactory"
                            acknowledge="auto">
        <jms:listener destination="org.springbyexample.jms.test" ref="jmsMessageListener" />
    </jms:listener-container>

</beans>
